
/* 
  ## 客户端和服务器端
    - 客户端：可以向服务器发请求，并接收返回的内容进行处理
    - 服务器端：能接收客户请求，发送数据
  
  ### 交互处理
    客户端  -- DNS服务器  -- 服务端
    1. URL地址解析
    2. DNS域名解析
    3. 和服务器建立TCP连接
    4. 把客户端信息发送给服务器（发送HTTP请求）
    5. 服务器得到请求并处理请求（HTTP响应）
    6. 客户端渲染服务器返回内容
    7. 和服务器断开TCP连接
  
  ### URL地址解析
    #### URI/URL/URN
    - URL（Uniform Resource Locator）：统一资源定位符，根据这个地址能找到对应的资源
    - URN（Uniform Resource Name）：统一资源名称，一般指国际上通用的一些名字
    - URI（Uniform Resource Identifier）：统一资源标识符，URL和URN是URI的子集
  
  ### 一个完整URL包含的内容
    http://www.test.com:80/stu/index.html?from=wx&lx=1#test
    - 协议           http://
      传输协议就是能购吧客户端和服务端通信的信息，进行传输的工具
      + http 超文本传输协议，除了传输文本，还可以传递媒体资源文件及XML格式数据
      + https 更加安全的http，一般涉及支付的网站都要采用https协议（s:ssl 加密传输）
      + ftp 文件传输协议（一般应用于把本地资源上传到服务器端）

    - 域名           www.test.com
      一个让用户方便记忆的名字，给服务器通网后会有2个ip，内网IP，外网IP
      + 顶级域名 qq.com
      + 一级域名 www.qq.com
      + 二级域名 sports.qq.com
      + 三级域名 kbs.sports.qq.com
      + .com 国际域名
      + .cn  中文域名
      + .edu 教育
      + .gov 政府
      + .io  博客
      + .org 官方组织
      + .net 系统类

    - 端口号          :80
      端口号取值范围 0-65535，用端口号来区分同一台服务器上的不同项目
      + http默认端口 80
      + https默认端口 443
      + ftp默认端口   21
      + 项目采用默认端口号，在书写地址的时候，不用加端口号，浏览器发送请求时会帮我们默认加上
    
    - 请求资源路径名称  /stu/index.html
      + 默认的路径或名称（xxx.com/stu/ 不指定资源名称，服务器会找默认的资源）
      + 注意伪URL地址的处理（URL重写技术是为了增加SEO搜索引擎优化，动态网址不能被搜索引擎收录，要把动态网址静态化，需要重写URL）
    
    - 问号传参信息     ?form=wx&lx=1
      + 客户端想把信息传给服务器
        + URL地址问号传参
        + 请求报文传输
      + 也可以实现多页面之间的信息交互
    
    - Hash值         #test
      + 也能充当信息传输的方式
      + 锚点定位
      + 基于Hash实现路由管控（不同的hash值，展示不同模块）


    服务器接到请求后
      1. 根据端口号找到对应的项目
      2. 根据请求资源的路径名称找到对应的资源
      3. 读取资源文件中的内容
      4. 把内容返回
*/