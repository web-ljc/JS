console.log(1);

// sum是函数名，代表这个函数本身
// sum() 是让函数执行，代码的是函数的返回结果
// n/m 是形参，是变量，用来存储执行函数时传递的实参
function sum(n, m) {
  let res = n + m
}
// 10/20 这是传递给形参变量的值（实参）
sum(10, 20)

/* 
  ### 函数 function
    - 函数就一个方法或者一个功能体，把实现某个功能的代码放到一起进行封装，以后要实现功能，只需执行函数即可 -- ‘封装’
    - 减少页面中冗余代码，提高代码重复使用率（低耦合高内聚）
    - 创建函数
      + 形参
      + 返回值
    - 执行函数
      - 实参
    - arguments
    - 函数底层运行机制
  #### 创建函数
    - 创建函数的时候设置了形参变量，但如果执行的时候并没有给传递对应的实参值，形参变量默认的值是undefined
    - 函数执行的时候，函数体内创建的变量我们是无法获取和操作的，如果想要获取内部信息，需要return返回机制，把信息返回
    - 没有写return， 函数默认返回值是undefined
    - 函数体遇到return，后边代码就不再执行

    function [函数名] ([形参]) {
      return [返回值]
    }
  #### 匿名函数
    - 匿名函数之函数表达式：把一个匿名函数本身作为值赋值给其它东西，这种函数一般不是手动触发执行，靠其它程序驱动触发执行
      window.onclick = function() {}
    - 匿名函数之自执行函数： 创建完一个匿名函数，紧接着执行
      (function(n){})(100)
*/