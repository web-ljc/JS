/* 
  事件委托
    1. 基于事件的冒泡传播机制完成
    2. 如果一个容器中很多元素都要触发某一个事件的时候做一些事情
      - 原始方案：给元素每一个都单独进行事件绑定
      - 新方案：给当前容器的这个事件行为绑定方法，由于冒泡机制，点击后代元素时，当前容器绑定的方法会触发
    3. 想要知道点击的是谁，只要基于事件对象中的 ev.target 事件源获取即可
  好处：
    - 基于事件委托实现，整体性能要比一个个绑定方法高出50%左右
    - 多元素触发，业务逻辑属于一体的，基于事件委托来处理更加好
    - 某些业务场景只能基于事件委托处理
*/