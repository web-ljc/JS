console.info(a, b) // undefined

var a = {b: 1}

function b () {
  return 1
}


/* 
  变量提升
    - 当栈内存或作用域形成，JS代码自上而下执行之前，浏览器会把所有带var 和 function 关键字的进行提前‘声明’或者‘定义’，这种提前处理的机制称为‘变量提升’
    
    声明(declare): var a （默认值时undefined）
    定义(defined): a = 12 (定义就是赋值操作)

  变量提升阶段
    - 带 var 的只声明未定义
    - 带 function 的声明和赋值都完成了
    - 变量提升只发生在当前作用域（开始加载页面的时候只对全局作用域下的进行提升，因为此时函数中存储的都是字符串而已）
    - 在全局作用域下声明的函数或者变量是‘全局变量’，在私有作用域下声明的变量是‘私有变量’
    - 在ES3 / ES5语法规范中，只有全局作用域和函数执行的私有作用域（栈内存），其他大括号不会形成栈内存

  当代码遇到执行创建函数代码后，直接跳过，因为在变量提升阶段已经完成赋值操作
  
  使用变量：
    - 使用未定义变量，报错
    - 使用对象上的不存在的变量，报undefined
*/